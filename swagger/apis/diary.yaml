paths:
  /api/diary/{diaryId}:
    get:
      summary: "꿈 일기 상세 조회"
      description: "params에 diary의 고유 id를 포함하여 get 요청"
      tags: [Diary]
      parameters:
        - name: "diaryId"
          in: "path"
          required: true
          description: "다이어리 id"
          schema:
            type: string
          examples:
            Sample:
              value: "62df4df5c0c4a5405650dba4"
              summary: "지금 db에 존재하는 다이어리 id"
      responses:
        "200":
          description: "꿈 일기 상세 정보"
          schema:
            type: object
            properties:
              success:
                type: boolean
              diary:
                type: object
                example:
                  {
                    "_id": "62df4df5c0c4a5405650dba4",
                    "name": "dreamit",
                    "email": "shn7446@naver.com",
                    "password": "$2b$10$1sHwUXQjp.NQPaQ2ig/xJe4wz/jsHEjmk0gnapOqAzJiBEs2aYjvm",
                    "badge": [1, 3],
                    "createdAt": "2022-07-26T02:04:56.328+00:00",
                  }
              like_list:
                type: object
                example:
                  {
                    "_id": "62df4f14c0c4a5405650dba7",
                    "userId": "62df4bc1f1ff31b19db9ace6",
                    "diaryId": "62df4df5c0c4a5405650dba4",
                  }
  /api/diary/recent/user/{userId}:
    get:
      summary: "사용자의 가장 최근 꿈 1개 조회"
      description: "params에 user의 고유 id를 포함하여 get 요청"
      tags: [Diary]
      parameters:
        - name: "userId"
          in: "path"
          required: true
          description: "유저 id"
          schema:
            type: string
          examples:
            Sample:
              value: "62df4bc8f1ff31b19db9ace9"
              summary: "지금 db에 존재하는 유저 id"
      responses:
        "200":
          description: "사용자의 가장 최근 꿈 1개 조회"
          schema:
            type: object
            properties:
              success:
                type: boolean
              diaries:
                type: object
  /api/diary/user/{userId}:
    get:
      summary: "사용자의 꿈 전체 리스트 조회"
      description: "params에 user의 고유 id를 포함하여 get 요청"
      tags: [Diary]
      parameters:
        - name: "userId"
          in: "path"
          required: true
          description: "유저 id"
          schema:
            type: string
          examples:
            Sample:
              value: "62df4bc8f1ff31b19db9ace9"
              summary: "지금 db에 존재하는 유저 id"
      responses:
        "200":
          description: "사용자의 꿈 리스트"
          schema:
            type: object
            properties:
              success:
                type: boolean
              diaries:
                type: object
    post:
      summary: "꿈 일기 업로드"
      description: "params에 user의 고유 id, body에 꿈 일기 정보를 담아 get 요청\n없는 정보는 빼고 요청"
      tags: [Diary]
      parameters:
        - name: "userId"
          in: "path"
          required: true
          description: "유저 id"
          schema:
            type: string
          examples:
            Sample:
              value: "62df4bc8f1ff31b19db9ace9"
              summary: "유저 id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  type: string
                content:
                  type: string
                img:
                  type: array
                music:
                  type: string
                release:
                  type: boolean
              example:
                author: 62df4bc8f1ff31b19db9ace9
                content: "bla bla blaaaa"
                img: ["이미지 정보가 들어올 예정"]
                music: "음악 링크?"
                release: true
      responses:
        "200":
          description: "꿈 저장 성공"
  /api/diary/emotion/{emotion}:
    get:
      summary: "특정 감정에 해당하는 글 하나를 랜덤 조회"
      description: "params에 emotion(감정)을 포함하여 get 요청"
      tags: [Diary]
      parameters:
        - name: "emotion"
          in: "path"
          required: true
          description: "감정 이름"
          schema:
            type: string
          examples:
            Sample:
              value: 공포
              summary: 감정
      responses:
        "200":
          description: "감정별 꿈 불러오기 성공"
  /api/diary/{diaryId}/likes/user/{userId}:
    put:
      summary: "꿈 일기 좋아요 수 업데이트"
      description: "기존 좋아요 여부와 관계 없이 params에 diary의 고유 id만 담아보내면 좋아요 수 업데이트, put 요청"
      tags: [Diary]
      parameters:
        - name: "diaryId"
          in: "path"
          required: true
          description: "다이어리 id"
          schema:
            type: string
          examples:
            Sample:
              value: "62df4df5c0c4a5405650dba4"
              summary: diary id
        - name: "userId"
          in: "path"
          required: true
          description: "유저 id"
          schema:
            type: string
          examples:
            Sample:
              value: "62df4bc8f1ff31b19db9ace9"
              summary: user id
      responses:
        "200":
          description: "좋아요 업데이트 성공"
